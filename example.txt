; ==========
; 
;   Usage: Enter each list item on seperate line, then enter
;            blank line to finish the list
;   A sorted version of the list will be displayed
;
; ==========


(define (push A n)
  (if (null? A)
      (cons n nil)
	  (cons (car A)
	        (push (cdr A)
			      n))))
;

(define (list-input-iter A I)
  (if (null? I)
      A
	  (list-input-iter (push A I)
	                   (input))))
(define (list-input)
  (list-input-iter nil (input)))
;

(define (sort-recur h T c)
  (if (null? T)
      (list h)
	  (if (<= h (car T))
	      (if c
		      (cons h T)
			  (sort-recur h
			              (sort-recur (car T)
						              (cdr T)
									  #f)
				          #t))
		  (sort-recur (car T)
		              (cons h (cdr T))
					  #f))))
(define (sort A)
  (sort-recur (car A) (cdr A) #f))
;


(sort (list-input))