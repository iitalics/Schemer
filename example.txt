; ==============================================
;             ~ Prime calculator ~
;    Determines if a number is prime or not
; ==============================================

(define (prime-iter n s m) ; n = number counting up to find factors of m
                           ; s = sqrt of m (floored)
                           ; m = number to see if prime
  (if (> n s)
      #t
      (if (= (% m n) 0)
          #f
          (prime-iter (+ n 1)
                      s
                      m))))
(define (prime? n)
  (if (and (!= n 2)			; even numbers that aren't 2 are  
           (= (% n 2) 0))   ;   automatically prime
      #f
      (prime-iter 2
                  (floor (sqrt n))
                  n)))


(define (validate-input n)
  (cond (null? n)
        nil
        (< n 0)
        (do (display "Invalid negative number")
            (exit -1))
        #t n))
(define (get-input)
  (validate-input (input)))

(define (main)
  (do (display "Enter a number: ")
      (let ((n (get-input)))
           (if (null? n)
               (do (newline)
                   (exit))
               (if (prime? n)
                   (display "'" n "' is a prime number")
                   (display "'" n "' is not a prime number"))))
      (newline)))


(do (display " ==\nPrime number calculator v1.0\n ==")
    (newline) (newline)
    (repeat (main)))
