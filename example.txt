(define (sort-iter b A c)
  (if (null? A)
      (list b)
      (if (<= b (car A))
          (if c
              (cons b A)
              (sort-iter b
                         (sort-iter (car A)
                                    (cdr A)
                                    #f)
                         #t))
          (sort-iter (car A)
                     (cons b
                           (cdr A))
                     #f))))
(define (sort A)
   (sort-iter (car A)
              (cdr A)
              #f))



(sort (list 5 3 8 1 9))
