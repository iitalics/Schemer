; ==============================================
;             ~ Prime calculator ~
;    Determines if a number is prime or not
; ==============================================

(define (prime-iter n s m)
  (if (> n s)
      #t
      (if (= (% m n) 0)
          #f
          (prime-iter (+ n 1)
                      s
                      m))))
(define (is-prime n)
  (if (and (!= n 2)
           (= (% n 2) 0))
      #f
      (prime-iter 2
                  (sqrt n)
                  n)))


(define (validate-input n)
  (if (null? n) nil
      (if (< n 0)
          (last (display "Invalid negative number")
                (new-line)
                (exit -1))
          n)))


(define (main)
  (last (display "Enter a number: ")
        (let ((n (validate-input (input))))
             (if (null? n)
                 (last (new-line)
                       (exit))
                 (if (is-prime n)
                     (display "'" n "' is a prime number")
                     (display "'" n "' is not a prime number"))))
        (new-line)))


(last (display " ==\nPrime number calculator v1.0\n ==")
      (new-line) (new-line)
      (repeat (main)))
